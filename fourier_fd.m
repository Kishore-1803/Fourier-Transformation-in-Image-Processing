%compression
originalImage = imread('https://4kwallpapers.com/images/wallpapers/landscape-windows-11-lake-forest-day-time-2560x1080-8621.jpeg');
grayImage = rgb2gray(originalImage);
figure;
imshow(grayImage);
title('Original Grayscale Image');
fourierImage = fft2(double(grayImage));
compressionRatio = 0.1;
[sortedMagnitudes, sortedIndices] = sort(abs(fourierImage(:)), 'descend');
thresholdIndex = ceil(compressionRatio * numel(fourierImage));
fourierImage(sortedIndices(thresholdIndex+1:end)) = 0;
compressedImage = uint8(ifft2(fourierImage));
figure;
imshow(compressedImage);
title('Compressed Image');
originalSize = numel(grayImage);
compressedSize = nnz(fourierImage);
compressionRatio = originalSize / compressedSize;
disp(['Compression Ratio: ', num2str(compressionRatio)]);
%%
%enhancement
originalImage = imread('https://4kwallpapers.com/images/wallpapers/landscape-windows-11-lake-forest-day-time-2560x1080-8621.jpeg');
figure;
imshow(originalImage);
title('Original Image');
grayImage = rgb2gray(originalImage);
figure;
imshow(grayImage);
title('Grayscale Image');
fourierImage = fftshift(fft2(double(grayImage)));
[M, N] = size(grayImage);
u = 0:(M-1);
v = 0:(N-1);
idx = find(u > M/2);
u(idx) = u(idx) - M;
idy = find(v > N/2);
v(idy) = v(idy) - N;
[V, U] = meshgrid(v, u);
D = sqrt(U.^2 + V.^2);
cutoffFrequency = 0.1; 
H = double(D > cutoffFrequency);
filteredFourierImage = fourierImage .* H;
filteredImage = ifft2(ifftshift(filteredFourierImage));
enhancedImage = uint8(abs(filteredImage));
figure;
imshow(enhancedImage);
title('Enhanced Image');
coloredEnhancedImage = ind2rgb(enhancedImage, jet(256));
figure;
imshow(coloredEnhancedImage);
title('Colored Enhanced Image');
roi = enhancedImage(500:550, 1000:1050);
background = enhancedImage(100:150, 1000:1050);
meanROI = mean(roi(:));
meanBackground = mean(background(:));
stdBackground = std(double(background(:)));
CNR = abs(meanROI - meanBackground) / stdBackground;
fprintf('Contrast-to-Noise Ratio (CNR): %.2f\n', CNR);
%%
%restoration
originalImage = imread('https://images.wallpaperscraft.com/image/single/mountain_lake_landscape_79402_2560x1600.jpg');
originalImage = im2double(originalImage);
figure;
imshow(originalImage);
title('Original Image');
LEN = 21;
THETA = 11;
motionBlurFilter = fspecial('motion', LEN, THETA);
blurredImage = imfilter(originalImage, motionBlurFilter, 'conv', 'symmetric');
noisyBlurredImage = imnoise(blurredImage, 'gaussian', 0, 0.01);
figure;
imshow(noisyBlurredImage);
title('Blurred and Noisy Image');
F_noisyBlurred = fft2(noisyBlurredImage);
H = psf2otf(motionBlurFilter, size(originalImage));
epsilon = 1e-1;
H_conj = conj(H);
H_magnitude = H .* H_conj;
Wiener_filter = H_conj ./ (H_magnitude + epsilon);
F_restored = F_noisyBlurred .* Wiener_filter;
restoredImage = ifft2(F_restored);
restoredImage = real(restoredImage);
figure;
imshow(restoredImage, []);
title('Restored Image using Fourier Transform');
mseValue = immse(originalImage, restoredImage);
disp(['Mean Squared Error (MSE): ', num2str(mseValue)]);
%%
% feature extraction
img1 = imread('https://images.unsplash.com/photo-1549558549-415fe4c37b60?q=80&w=1000&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxleHBsb3JlLWZlZWR8Mnx8fGVufDB8fHx8fA%3D%3D');
img2 = imread('https://4kwallpapers.com/images/wallpapers/landscape-windows-11-lake-forest-day-time-2560x1080-8621.jpeg');
img1 = rgb2gray(img1);
img2 = rgb2gray(img2);
img1 = imresize(img1, [720 1080]);
img2 = imresize(img2, [720 1080]);
figure;
imshow(img1);
title("Image 1");
figure;
imshow(img2);
title("Image 2");
F1 = fft2(img1);
F2 = fft2(img2);
F1 = fftshift(F1);
F2 = fftshift(F2);
magnitude1 = abs(F1);
magnitude2 = abs(F2);
figure;
subplot(1, 2, 1);
imshow(log(1 + magnitude1), []);
title('Magnitude Spectrum of Image 1');
subplot(1, 2, 2);
imshow(log(1 + magnitude2), []);
title('Magnitude Spectrum of Image 2');
feature1 = magnitude1(:);
feature2 = magnitude2(:);
distance = norm(feature1 - feature2);
disp(['Euclidean Distance between images: ', num2str(distance)]);